State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: programstruct $end

    1 programstruct: program_head SEMICOLON program_body DOT

    2 program_head: PROGRAM_ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
    3             | PROGRAM_ID

    4 program_body: const_declarations var_declarations subprogram_declarations compound_statement

    5 idlist: idlist COMMA ID
    6       | ID

    7 const_declarations: CONST const_declaration SEMICOLON
    8                   | /* empty */

    9 const_declaration: const_declaration SEMICOLON ID EQUAL const_value
   10                  | ID EQUAL const_value

   11 const_value: PLUS NUM
   12            | MINUS NUM
   13            | NUM
   14            | QUOTE LETTER QUOTE

   15 var_declarations: VAR var_declaration SEMICOLON
   16                 | /* empty */

   17 var_declaration: var_declaration SEMICOLON idlist COLON type
   18                | idlist COLON type

   19 type: basic_type
   20     | ARRAY LEFT_BRACKET period RIGHT_BRACKET OF basic_type

   21 basic_type: INTEGER
   22           | REAL
   23           | BOOLEAN
   24           | CHAR

   25 period: period COMMA DIGITS..DIGITS
   26       | DIGITS..DIGITS

   27 subprogram_declarations: subprogram_declarations subprogram SEMICOLON
   28                        | /* empty */

   29 subprogram: subprogram_head SEMICOLON subprogram_body

   30 subprogram_head: PROCEDURE ID formal_parameter
   31                | FUNCTION ID formal_parameter COLON basic_type

   32 formal_parameter: LEFT_PARENTHESIS parameter_list RIGHT_PARENTHESIS
   33                 | /* empty */

   34 parameter_list: parameter_list SEMICOLON parameter
   35               | parameter

   36 parameter: var_parameter
   37          | value_parameter

   38 var_parameter: VAR value_parameter

   39 value_parameter: idlist COLON basic_type

   40 subprogram_body: const_declarations var_declarations compound_statement

   41 compound_statement: BEGIN statement_list END

   42 statement_list: statement_list SEMICOLON statement
   43               | statement

   44 statement: variable ASSIGNOP expression
   45          | procedure_call
   46          | compound_statement
   47          | IF expression THEN statement else_part
   48          | FOR ID ASSIGNOP expression TO expression DO statement
   49          | READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS
   50          | WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   51          | /* empty */

   52 variable_list: variable_list COMMA variable
   53              | variable

   54 variable: ID id_varpart

   55 id_varpart: LEFT_BRACKET expression_list RIGHT_BRACKET
   56           | /* empty */

   57 procedure_call: ID
   58               | ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

   59 else_part: ELSE statement
   60          | /* empty */

   61 expression_list: expression_list COLON expression
   62                | expression

   63 expression: simple_expression RELOP simple_expression
   64           | simple_expression

   65 simple_expression: simple_expression ADDOP term
   66                  | term

   67 term: term MULOP factor
   68     | factor

   69 factor: NUM
   70       | variable
   71       | ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | NOT factor
   74       | UMINUS factor


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 1 7 9 15 17 27 29 34 42
DOT (259) 1
PROGRAM_ID (260) 2 3
LEFT_PARENTHESIS (261) 2 32 49 50 58 71 72
RIGHT_PARENTHESIS (262) 2 32 49 50 58 71 72
COMMA (263) 5 25 52
ID (264) 5 6 9 10 30 31 48 54 57 58 71
CONST (265) 7
EQUAL (266) 9 10
PLUS (267) 11
NUM (268) 11 12 13 69
MINUS (269) 12
QUOTE (270) 14
LETTER (271) 14
VAR (272) 15 38
COLON (273) 17 18 31 39 61
LEFT_BRACKET (274) 20 55
RIGHT_BRACKET (275) 20 55
INTEGER (276) 21
REAL (277) 22
BOOLEAN (278) 23
CHAR (279) 24
DIGITS..DIGITS (280) 25 26
PROCEDURE (281) 30
FUNCTION (282) 31
BEGIN (283) 41
END (284) 41
ASSIGNOP (285) 44 48
IF (286) 47
THEN (287) 47
ELSE (288) 59
FOR (289) 48
TO (290) 48
DO (291) 48
NOT (292) 73
RELOP (293) 63
ADDOP (294) 65
MULOP (295) 67
UMINUS (296) 74
READ (297) 49
WRITE (298) 50
ARRAY (299) 20
OF (300) 20


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
programstruct (47)
    on left: 1, on right: 0
program_head (48)
    on left: 2 3, on right: 1
program_body (49)
    on left: 4, on right: 1
idlist (50)
    on left: 5 6, on right: 2 5 17 18 39
const_declarations (51)
    on left: 7 8, on right: 4 40
const_declaration (52)
    on left: 9 10, on right: 7 9
const_value (53)
    on left: 11 12 13 14, on right: 9 10
var_declarations (54)
    on left: 15 16, on right: 4 40
var_declaration (55)
    on left: 17 18, on right: 15 17
type (56)
    on left: 19 20, on right: 17 18
basic_type (57)
    on left: 21 22 23 24, on right: 19 20 31 39
period (58)
    on left: 25 26, on right: 20 25
subprogram_declarations (59)
    on left: 27 28, on right: 4 27
subprogram (60)
    on left: 29, on right: 27
subprogram_head (61)
    on left: 30 31, on right: 29
formal_parameter (62)
    on left: 32 33, on right: 30 31
parameter_list (63)
    on left: 34 35, on right: 32 34
parameter (64)
    on left: 36 37, on right: 34 35
var_parameter (65)
    on left: 38, on right: 36
value_parameter (66)
    on left: 39, on right: 37 38
subprogram_body (67)
    on left: 40, on right: 29
compound_statement (68)
    on left: 41, on right: 4 40 46
statement_list (69)
    on left: 42 43, on right: 41 42
statement (70)
    on left: 44 45 46 47 48 49 50 51, on right: 42 43 47 48 59
variable_list (71)
    on left: 52 53, on right: 49 52
variable (72)
    on left: 54, on right: 44 52 53 70
id_varpart (73)
    on left: 55 56, on right: 54
procedure_call (74)
    on left: 57 58, on right: 45
else_part (75)
    on left: 59 60, on right: 47
expression_list (76)
    on left: 61 62, on right: 50 55 58 61 71 72
expression (77)
    on left: 63 64, on right: 44 47 48 61 62
simple_expression (78)
    on left: 65 66, on right: 63 64 65
term (79)
    on left: 67 68, on right: 65 66 67
factor (80)
    on left: 69 70 71 72 73 74, on right: 67 68 73 74


state 0

    0 $accept: . programstruct $end
    1 programstruct: . program_head SEMICOLON program_body DOT
    2 program_head: . PROGRAM_ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
    3             | . PROGRAM_ID

    PROGRAM_ID  shift, and go to state 1

    programstruct  go to state 2
    program_head   go to state 3


state 1

    2 program_head: PROGRAM_ID . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
    3             | PROGRAM_ID .  [SEMICOLON]

    LEFT_PARENTHESIS  shift, and go to state 4

    $default  reduce using rule 3 (program_head)


state 2

    0 $accept: programstruct . $end

    $end  shift, and go to state 5


state 3

    1 programstruct: program_head . SEMICOLON program_body DOT

    SEMICOLON  shift, and go to state 6


state 4

    2 program_head: PROGRAM_ID LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS
    5 idlist: . idlist COMMA ID
    6       | . ID

    ID  shift, and go to state 7

    idlist  go to state 8


state 5

    0 $accept: programstruct $end .

    $default  accept


state 6

    1 programstruct: program_head SEMICOLON . program_body DOT
    4 program_body: . const_declarations var_declarations subprogram_declarations compound_statement
    7 const_declarations: . CONST const_declaration SEMICOLON
    8                   | .  [VAR, PROCEDURE, FUNCTION, BEGIN]

    CONST  shift, and go to state 9

    $default  reduce using rule 8 (const_declarations)

    program_body        go to state 10
    const_declarations  go to state 11


state 7

    6 idlist: ID .

    $default  reduce using rule 6 (idlist)


state 8

    2 program_head: PROGRAM_ID LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS
    5 idlist: idlist . COMMA ID

    RIGHT_PARENTHESIS  shift, and go to state 12
    COMMA              shift, and go to state 13


state 9

    7 const_declarations: CONST . const_declaration SEMICOLON
    9 const_declaration: . const_declaration SEMICOLON ID EQUAL const_value
   10                  | . ID EQUAL const_value

    ID  shift, and go to state 14

    const_declaration  go to state 15


state 10

    1 programstruct: program_head SEMICOLON program_body . DOT

    DOT  shift, and go to state 16


state 11

    4 program_body: const_declarations . var_declarations subprogram_declarations compound_statement
   15 var_declarations: . VAR var_declaration SEMICOLON
   16                 | .  [PROCEDURE, FUNCTION, BEGIN]

    VAR  shift, and go to state 17

    $default  reduce using rule 16 (var_declarations)

    var_declarations  go to state 18


state 12

    2 program_head: PROGRAM_ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS .

    $default  reduce using rule 2 (program_head)


state 13

    5 idlist: idlist COMMA . ID

    ID  shift, and go to state 19


state 14

   10 const_declaration: ID . EQUAL const_value

    EQUAL  shift, and go to state 20


state 15

    7 const_declarations: CONST const_declaration . SEMICOLON
    9 const_declaration: const_declaration . SEMICOLON ID EQUAL const_value

    SEMICOLON  shift, and go to state 21


state 16

    1 programstruct: program_head SEMICOLON program_body DOT .

    $default  reduce using rule 1 (programstruct)


state 17

    5 idlist: . idlist COMMA ID
    6       | . ID
   15 var_declarations: VAR . var_declaration SEMICOLON
   17 var_declaration: . var_declaration SEMICOLON idlist COLON type
   18                | . idlist COLON type

    ID  shift, and go to state 7

    idlist           go to state 22
    var_declaration  go to state 23


state 18

    4 program_body: const_declarations var_declarations . subprogram_declarations compound_statement
   27 subprogram_declarations: . subprogram_declarations subprogram SEMICOLON
   28                        | .

    $default  reduce using rule 28 (subprogram_declarations)

    subprogram_declarations  go to state 24


state 19

    5 idlist: idlist COMMA ID .

    $default  reduce using rule 5 (idlist)


state 20

   10 const_declaration: ID EQUAL . const_value
   11 const_value: . PLUS NUM
   12            | . MINUS NUM
   13            | . NUM
   14            | . QUOTE LETTER QUOTE

    PLUS   shift, and go to state 25
    NUM    shift, and go to state 26
    MINUS  shift, and go to state 27
    QUOTE  shift, and go to state 28

    const_value  go to state 29


state 21

    7 const_declarations: CONST const_declaration SEMICOLON .  [VAR, PROCEDURE, FUNCTION, BEGIN]
    9 const_declaration: const_declaration SEMICOLON . ID EQUAL const_value

    ID  shift, and go to state 30

    $default  reduce using rule 7 (const_declarations)


state 22

    5 idlist: idlist . COMMA ID
   18 var_declaration: idlist . COLON type

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 31


state 23

   15 var_declarations: VAR var_declaration . SEMICOLON
   17 var_declaration: var_declaration . SEMICOLON idlist COLON type

    SEMICOLON  shift, and go to state 32


state 24

    4 program_body: const_declarations var_declarations subprogram_declarations . compound_statement
   27 subprogram_declarations: subprogram_declarations . subprogram SEMICOLON
   29 subprogram: . subprogram_head SEMICOLON subprogram_body
   30 subprogram_head: . PROCEDURE ID formal_parameter
   31                | . FUNCTION ID formal_parameter COLON basic_type
   41 compound_statement: . BEGIN statement_list END

    PROCEDURE  shift, and go to state 33
    FUNCTION   shift, and go to state 34
    BEGIN      shift, and go to state 35

    subprogram          go to state 36
    subprogram_head     go to state 37
    compound_statement  go to state 38


state 25

   11 const_value: PLUS . NUM

    NUM  shift, and go to state 39


state 26

   13 const_value: NUM .

    $default  reduce using rule 13 (const_value)


state 27

   12 const_value: MINUS . NUM

    NUM  shift, and go to state 40


state 28

   14 const_value: QUOTE . LETTER QUOTE

    LETTER  shift, and go to state 41


state 29

   10 const_declaration: ID EQUAL const_value .

    $default  reduce using rule 10 (const_declaration)


state 30

    9 const_declaration: const_declaration SEMICOLON ID . EQUAL const_value

    EQUAL  shift, and go to state 42


state 31

   18 var_declaration: idlist COLON . type
   19 type: . basic_type
   20     | . ARRAY LEFT_BRACKET period RIGHT_BRACKET OF basic_type
   21 basic_type: . INTEGER
   22           | . REAL
   23           | . BOOLEAN
   24           | . CHAR

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46
    ARRAY    shift, and go to state 47

    type        go to state 48
    basic_type  go to state 49


state 32

    5 idlist: . idlist COMMA ID
    6       | . ID
   15 var_declarations: VAR var_declaration SEMICOLON .  [PROCEDURE, FUNCTION, BEGIN]
   17 var_declaration: var_declaration SEMICOLON . idlist COLON type

    ID  shift, and go to state 7

    $default  reduce using rule 15 (var_declarations)

    idlist  go to state 50


state 33

   30 subprogram_head: PROCEDURE . ID formal_parameter

    ID  shift, and go to state 51


state 34

   31 subprogram_head: FUNCTION . ID formal_parameter COLON basic_type

    ID  shift, and go to state 52


state 35

   41 compound_statement: . BEGIN statement_list END
   41                   | BEGIN . statement_list END
   42 statement_list: . statement_list SEMICOLON statement
   43               | . statement
   44 statement: . variable ASSIGNOP expression
   45          | . procedure_call
   46          | . compound_statement
   47          | . IF expression THEN statement else_part
   48          | . FOR ID ASSIGNOP expression TO expression DO statement
   49          | . READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS
   50          | . WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   51          | .  [SEMICOLON, END]
   54 variable: . ID id_varpart
   57 procedure_call: . ID
   58               | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    ID     shift, and go to state 53
    BEGIN  shift, and go to state 35
    IF     shift, and go to state 54
    FOR    shift, and go to state 55
    READ   shift, and go to state 56
    WRITE  shift, and go to state 57

    $default  reduce using rule 51 (statement)

    compound_statement  go to state 58
    statement_list      go to state 59
    statement           go to state 60
    variable            go to state 61
    procedure_call      go to state 62


state 36

   27 subprogram_declarations: subprogram_declarations subprogram . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 37

   29 subprogram: subprogram_head . SEMICOLON subprogram_body

    SEMICOLON  shift, and go to state 64


state 38

    4 program_body: const_declarations var_declarations subprogram_declarations compound_statement .

    $default  reduce using rule 4 (program_body)


state 39

   11 const_value: PLUS NUM .

    $default  reduce using rule 11 (const_value)


state 40

   12 const_value: MINUS NUM .

    $default  reduce using rule 12 (const_value)


state 41

   14 const_value: QUOTE LETTER . QUOTE

    QUOTE  shift, and go to state 65


state 42

    9 const_declaration: const_declaration SEMICOLON ID EQUAL . const_value
   11 const_value: . PLUS NUM
   12            | . MINUS NUM
   13            | . NUM
   14            | . QUOTE LETTER QUOTE

    PLUS   shift, and go to state 25
    NUM    shift, and go to state 26
    MINUS  shift, and go to state 27
    QUOTE  shift, and go to state 28

    const_value  go to state 66


state 43

   21 basic_type: INTEGER .

    $default  reduce using rule 21 (basic_type)


state 44

   22 basic_type: REAL .

    $default  reduce using rule 22 (basic_type)


state 45

   23 basic_type: BOOLEAN .

    $default  reduce using rule 23 (basic_type)


state 46

   24 basic_type: CHAR .

    $default  reduce using rule 24 (basic_type)


state 47

   20 type: ARRAY . LEFT_BRACKET period RIGHT_BRACKET OF basic_type

    LEFT_BRACKET  shift, and go to state 67


state 48

   18 var_declaration: idlist COLON type .

    $default  reduce using rule 18 (var_declaration)


state 49

   19 type: basic_type .

    $default  reduce using rule 19 (type)


state 50

    5 idlist: idlist . COMMA ID
   17 var_declaration: var_declaration SEMICOLON idlist . COLON type

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 68


state 51

   30 subprogram_head: PROCEDURE ID . formal_parameter
   32 formal_parameter: . LEFT_PARENTHESIS parameter_list RIGHT_PARENTHESIS
   33                 | .  [SEMICOLON]

    LEFT_PARENTHESIS  shift, and go to state 69

    $default  reduce using rule 33 (formal_parameter)

    formal_parameter  go to state 70


state 52

   31 subprogram_head: FUNCTION ID . formal_parameter COLON basic_type
   32 formal_parameter: . LEFT_PARENTHESIS parameter_list RIGHT_PARENTHESIS
   33                 | .  [COLON]

    LEFT_PARENTHESIS  shift, and go to state 69

    $default  reduce using rule 33 (formal_parameter)

    formal_parameter  go to state 71


state 53

   54 variable: ID . id_varpart
   55 id_varpart: . LEFT_BRACKET expression_list RIGHT_BRACKET
   56           | .  [ASSIGNOP]
   57 procedure_call: ID .  [SEMICOLON, END, ELSE]
   58               | ID . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 72
    LEFT_BRACKET      shift, and go to state 73

    ASSIGNOP  reduce using rule 56 (id_varpart)
    $default  reduce using rule 57 (procedure_call)

    id_varpart  go to state 74


state 54

   47 statement: IF . expression THEN statement else_part
   54 variable: . ID id_varpart
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression         go to state 81
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 55

   48 statement: FOR . ID ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 85


state 56

   49 statement: READ . LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 86


state 57

   50 statement: WRITE . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 87


state 58

   46 statement: compound_statement .

    $default  reduce using rule 46 (statement)


state 59

   41 compound_statement: BEGIN statement_list . END
   42 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 88
    END        shift, and go to state 89


state 60

   43 statement_list: statement .

    $default  reduce using rule 43 (statement_list)


state 61

   44 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 90


state 62

   45 statement: procedure_call .

    $default  reduce using rule 45 (statement)


state 63

   27 subprogram_declarations: subprogram_declarations subprogram SEMICOLON .

    $default  reduce using rule 27 (subprogram_declarations)


state 64

    7 const_declarations: . CONST const_declaration SEMICOLON
    8                   | .  [VAR, BEGIN]
   29 subprogram: subprogram_head SEMICOLON . subprogram_body
   40 subprogram_body: . const_declarations var_declarations compound_statement

    CONST  shift, and go to state 9

    $default  reduce using rule 8 (const_declarations)

    const_declarations  go to state 91
    subprogram_body     go to state 92


state 65

   14 const_value: QUOTE LETTER QUOTE .

    $default  reduce using rule 14 (const_value)


state 66

    9 const_declaration: const_declaration SEMICOLON ID EQUAL const_value .

    $default  reduce using rule 9 (const_declaration)


state 67

   20 type: ARRAY LEFT_BRACKET . period RIGHT_BRACKET OF basic_type
   25 period: . period COMMA DIGITS..DIGITS
   26       | . DIGITS..DIGITS

    DIGITS..DIGITS  shift, and go to state 93

    period  go to state 94


state 68

   17 var_declaration: var_declaration SEMICOLON idlist COLON . type
   19 type: . basic_type
   20     | . ARRAY LEFT_BRACKET period RIGHT_BRACKET OF basic_type
   21 basic_type: . INTEGER
   22           | . REAL
   23           | . BOOLEAN
   24           | . CHAR

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46
    ARRAY    shift, and go to state 47

    type        go to state 95
    basic_type  go to state 49


state 69

    5 idlist: . idlist COMMA ID
    6       | . ID
   32 formal_parameter: LEFT_PARENTHESIS . parameter_list RIGHT_PARENTHESIS
   34 parameter_list: . parameter_list SEMICOLON parameter
   35               | . parameter
   36 parameter: . var_parameter
   37          | . value_parameter
   38 var_parameter: . VAR value_parameter
   39 value_parameter: . idlist COLON basic_type

    ID   shift, and go to state 7
    VAR  shift, and go to state 96

    idlist           go to state 97
    parameter_list   go to state 98
    parameter        go to state 99
    var_parameter    go to state 100
    value_parameter  go to state 101


state 70

   30 subprogram_head: PROCEDURE ID formal_parameter .

    $default  reduce using rule 30 (subprogram_head)


state 71

   31 subprogram_head: FUNCTION ID formal_parameter . COLON basic_type

    COLON  shift, and go to state 102


state 72

   54 variable: . ID id_varpart
   58 procedure_call: ID LEFT_PARENTHESIS . expression_list RIGHT_PARENTHESIS
   61 expression_list: . expression_list COLON expression
   62                | . expression
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression_list    go to state 103
    expression         go to state 104
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 73

   54 variable: . ID id_varpart
   55 id_varpart: LEFT_BRACKET . expression_list RIGHT_BRACKET
   61 expression_list: . expression_list COLON expression
   62                | . expression
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression_list    go to state 105
    expression         go to state 104
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 74

   54 variable: ID id_varpart .

    $default  reduce using rule 54 (variable)


state 75

   54 variable: . ID id_varpart
   61 expression_list: . expression_list COLON expression
   62                | . expression
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | LEFT_PARENTHESIS . expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression_list    go to state 106
    expression         go to state 104
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 76

   54 variable: ID . id_varpart
   55 id_varpart: . LEFT_BRACKET expression_list RIGHT_BRACKET
   56           | .  [SEMICOLON, RIGHT_PARENTHESIS, COLON, RIGHT_BRACKET, END, THEN, ELSE, TO, DO, RELOP, ADDOP, MULOP]
   71 factor: ID . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 107
    LEFT_BRACKET      shift, and go to state 73

    $default  reduce using rule 56 (id_varpart)

    id_varpart  go to state 74


state 77

   69 factor: NUM .

    $default  reduce using rule 69 (factor)


state 78

   54 variable: . ID id_varpart
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   73       | NOT . factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable  go to state 80
    factor    go to state 108


state 79

   54 variable: . ID id_varpart
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor
   74       | UMINUS . factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable  go to state 80
    factor    go to state 109


state 80

   70 factor: variable .

    $default  reduce using rule 70 (factor)


state 81

   47 statement: IF expression . THEN statement else_part

    THEN  shift, and go to state 110


state 82

   63 expression: simple_expression . RELOP simple_expression
   64           | simple_expression .  [SEMICOLON, RIGHT_PARENTHESIS, COLON, RIGHT_BRACKET, END, THEN, ELSE, TO, DO]
   65 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 111
    ADDOP  shift, and go to state 112

    $default  reduce using rule 64 (expression)


state 83

   66 simple_expression: term .  [SEMICOLON, RIGHT_PARENTHESIS, COLON, RIGHT_BRACKET, END, THEN, ELSE, TO, DO, RELOP, ADDOP]
   67 term: term . MULOP factor

    MULOP  shift, and go to state 113

    $default  reduce using rule 66 (simple_expression)


state 84

   68 term: factor .

    $default  reduce using rule 68 (term)


state 85

   48 statement: FOR ID . ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 114


state 86

   49 statement: READ LEFT_PARENTHESIS . variable_list RIGHT_PARENTHESIS
   52 variable_list: . variable_list COMMA variable
   53              | . variable
   54 variable: . ID id_varpart

    ID  shift, and go to state 115

    variable_list  go to state 116
    variable       go to state 117


state 87

   50 statement: WRITE LEFT_PARENTHESIS . expression_list RIGHT_PARENTHESIS
   54 variable: . ID id_varpart
   61 expression_list: . expression_list COLON expression
   62                | . expression
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression_list    go to state 118
    expression         go to state 104
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 88

   41 compound_statement: . BEGIN statement_list END
   42 statement_list: statement_list SEMICOLON . statement
   44 statement: . variable ASSIGNOP expression
   45          | . procedure_call
   46          | . compound_statement
   47          | . IF expression THEN statement else_part
   48          | . FOR ID ASSIGNOP expression TO expression DO statement
   49          | . READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS
   50          | . WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   51          | .  [SEMICOLON, END]
   54 variable: . ID id_varpart
   57 procedure_call: . ID
   58               | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    ID     shift, and go to state 53
    BEGIN  shift, and go to state 35
    IF     shift, and go to state 54
    FOR    shift, and go to state 55
    READ   shift, and go to state 56
    WRITE  shift, and go to state 57

    $default  reduce using rule 51 (statement)

    compound_statement  go to state 58
    statement           go to state 119
    variable            go to state 61
    procedure_call      go to state 62


state 89

   41 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 41 (compound_statement)


state 90

   44 statement: variable ASSIGNOP . expression
   54 variable: . ID id_varpart
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression         go to state 120
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 91

   15 var_declarations: . VAR var_declaration SEMICOLON
   16                 | .  [BEGIN]
   40 subprogram_body: const_declarations . var_declarations compound_statement

    VAR  shift, and go to state 17

    $default  reduce using rule 16 (var_declarations)

    var_declarations  go to state 121


state 92

   29 subprogram: subprogram_head SEMICOLON subprogram_body .

    $default  reduce using rule 29 (subprogram)


state 93

   26 period: DIGITS..DIGITS .

    $default  reduce using rule 26 (period)


state 94

   20 type: ARRAY LEFT_BRACKET period . RIGHT_BRACKET OF basic_type
   25 period: period . COMMA DIGITS..DIGITS

    COMMA          shift, and go to state 122
    RIGHT_BRACKET  shift, and go to state 123


state 95

   17 var_declaration: var_declaration SEMICOLON idlist COLON type .

    $default  reduce using rule 17 (var_declaration)


state 96

    5 idlist: . idlist COMMA ID
    6       | . ID
   38 var_parameter: VAR . value_parameter
   39 value_parameter: . idlist COLON basic_type

    ID  shift, and go to state 7

    idlist           go to state 97
    value_parameter  go to state 124


state 97

    5 idlist: idlist . COMMA ID
   39 value_parameter: idlist . COLON basic_type

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 125


state 98

   32 formal_parameter: LEFT_PARENTHESIS parameter_list . RIGHT_PARENTHESIS
   34 parameter_list: parameter_list . SEMICOLON parameter

    SEMICOLON          shift, and go to state 126
    RIGHT_PARENTHESIS  shift, and go to state 127


state 99

   35 parameter_list: parameter .

    $default  reduce using rule 35 (parameter_list)


state 100

   36 parameter: var_parameter .

    $default  reduce using rule 36 (parameter)


state 101

   37 parameter: value_parameter .

    $default  reduce using rule 37 (parameter)


state 102

   21 basic_type: . INTEGER
   22           | . REAL
   23           | . BOOLEAN
   24           | . CHAR
   31 subprogram_head: FUNCTION ID formal_parameter COLON . basic_type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46

    basic_type  go to state 128


state 103

   58 procedure_call: ID LEFT_PARENTHESIS expression_list . RIGHT_PARENTHESIS
   61 expression_list: expression_list . COLON expression

    RIGHT_PARENTHESIS  shift, and go to state 129
    COLON              shift, and go to state 130


state 104

   62 expression_list: expression .

    $default  reduce using rule 62 (expression_list)


state 105

   55 id_varpart: LEFT_BRACKET expression_list . RIGHT_BRACKET
   61 expression_list: expression_list . COLON expression

    COLON          shift, and go to state 130
    RIGHT_BRACKET  shift, and go to state 131


state 106

   61 expression_list: expression_list . COLON expression
   72 factor: LEFT_PARENTHESIS expression_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 132
    COLON              shift, and go to state 130


state 107

   54 variable: . ID id_varpart
   61 expression_list: . expression_list COLON expression
   62                | . expression
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   71       | ID LEFT_PARENTHESIS . expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression_list    go to state 133
    expression         go to state 104
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 108

   73 factor: NOT factor .

    $default  reduce using rule 73 (factor)


state 109

   74 factor: UMINUS factor .

    $default  reduce using rule 74 (factor)


state 110

   41 compound_statement: . BEGIN statement_list END
   44 statement: . variable ASSIGNOP expression
   45          | . procedure_call
   46          | . compound_statement
   47          | . IF expression THEN statement else_part
   47          | IF expression THEN . statement else_part
   48          | . FOR ID ASSIGNOP expression TO expression DO statement
   49          | . READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS
   50          | . WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   51          | .  [SEMICOLON, END, ELSE]
   54 variable: . ID id_varpart
   57 procedure_call: . ID
   58               | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    ID     shift, and go to state 53
    BEGIN  shift, and go to state 35
    IF     shift, and go to state 54
    FOR    shift, and go to state 55
    READ   shift, and go to state 56
    WRITE  shift, and go to state 57

    $default  reduce using rule 51 (statement)

    compound_statement  go to state 58
    statement           go to state 134
    variable            go to state 61
    procedure_call      go to state 62


state 111

   54 variable: . ID id_varpart
   63 expression: simple_expression RELOP . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    simple_expression  go to state 135
    term               go to state 83
    factor             go to state 84


state 112

   54 variable: . ID id_varpart
   65 simple_expression: simple_expression ADDOP . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable  go to state 80
    term      go to state 136
    factor    go to state 84


state 113

   54 variable: . ID id_varpart
   67 term: term MULOP . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable  go to state 80
    factor    go to state 137


state 114

   48 statement: FOR ID ASSIGNOP . expression TO expression DO statement
   54 variable: . ID id_varpart
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression         go to state 138
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 115

   54 variable: ID . id_varpart
   55 id_varpart: . LEFT_BRACKET expression_list RIGHT_BRACKET
   56           | .  [RIGHT_PARENTHESIS, COMMA]

    LEFT_BRACKET  shift, and go to state 73

    $default  reduce using rule 56 (id_varpart)

    id_varpart  go to state 74


state 116

   49 statement: READ LEFT_PARENTHESIS variable_list . RIGHT_PARENTHESIS
   52 variable_list: variable_list . COMMA variable

    RIGHT_PARENTHESIS  shift, and go to state 139
    COMMA              shift, and go to state 140


state 117

   53 variable_list: variable .

    $default  reduce using rule 53 (variable_list)


state 118

   50 statement: WRITE LEFT_PARENTHESIS expression_list . RIGHT_PARENTHESIS
   61 expression_list: expression_list . COLON expression

    RIGHT_PARENTHESIS  shift, and go to state 141
    COLON              shift, and go to state 130


state 119

   42 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 42 (statement_list)


state 120

   44 statement: variable ASSIGNOP expression .

    $default  reduce using rule 44 (statement)


state 121

   40 subprogram_body: const_declarations var_declarations . compound_statement
   41 compound_statement: . BEGIN statement_list END

    BEGIN  shift, and go to state 35

    compound_statement  go to state 142


state 122

   25 period: period COMMA . DIGITS..DIGITS

    DIGITS..DIGITS  shift, and go to state 143


state 123

   20 type: ARRAY LEFT_BRACKET period RIGHT_BRACKET . OF basic_type

    OF  shift, and go to state 144


state 124

   38 var_parameter: VAR value_parameter .

    $default  reduce using rule 38 (var_parameter)


state 125

   21 basic_type: . INTEGER
   22           | . REAL
   23           | . BOOLEAN
   24           | . CHAR
   39 value_parameter: idlist COLON . basic_type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46

    basic_type  go to state 145


state 126

    5 idlist: . idlist COMMA ID
    6       | . ID
   34 parameter_list: parameter_list SEMICOLON . parameter
   36 parameter: . var_parameter
   37          | . value_parameter
   38 var_parameter: . VAR value_parameter
   39 value_parameter: . idlist COLON basic_type

    ID   shift, and go to state 7
    VAR  shift, and go to state 96

    idlist           go to state 97
    parameter        go to state 146
    var_parameter    go to state 100
    value_parameter  go to state 101


state 127

   32 formal_parameter: LEFT_PARENTHESIS parameter_list RIGHT_PARENTHESIS .

    $default  reduce using rule 32 (formal_parameter)


state 128

   31 subprogram_head: FUNCTION ID formal_parameter COLON basic_type .

    $default  reduce using rule 31 (subprogram_head)


state 129

   58 procedure_call: ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (procedure_call)


state 130

   54 variable: . ID id_varpart
   61 expression_list: expression_list COLON . expression
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression         go to state 147
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 131

   55 id_varpart: LEFT_BRACKET expression_list RIGHT_BRACKET .

    $default  reduce using rule 55 (id_varpart)


state 132

   72 factor: LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .

    $default  reduce using rule 72 (factor)


state 133

   61 expression_list: expression_list . COLON expression
   71 factor: ID LEFT_PARENTHESIS expression_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 148
    COLON              shift, and go to state 130


state 134

   47 statement: IF expression THEN statement . else_part
   59 else_part: . ELSE statement
   60          | .  [SEMICOLON, END, ELSE]

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 60 (else_part)]
    $default  reduce using rule 60 (else_part)

    else_part  go to state 150


state 135

   63 expression: simple_expression RELOP simple_expression .  [SEMICOLON, RIGHT_PARENTHESIS, COLON, RIGHT_BRACKET, END, THEN, ELSE, TO, DO]
   65 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 112

    $default  reduce using rule 63 (expression)


state 136

   65 simple_expression: simple_expression ADDOP term .  [SEMICOLON, RIGHT_PARENTHESIS, COLON, RIGHT_BRACKET, END, THEN, ELSE, TO, DO, RELOP, ADDOP]
   67 term: term . MULOP factor

    MULOP  shift, and go to state 113

    $default  reduce using rule 65 (simple_expression)


state 137

   67 term: term MULOP factor .

    $default  reduce using rule 67 (term)


state 138

   48 statement: FOR ID ASSIGNOP expression . TO expression DO statement

    TO  shift, and go to state 151


state 139

   49 statement: READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS .

    $default  reduce using rule 49 (statement)


state 140

   52 variable_list: variable_list COMMA . variable
   54 variable: . ID id_varpart

    ID  shift, and go to state 115

    variable  go to state 152


state 141

   50 statement: WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .

    $default  reduce using rule 50 (statement)


state 142

   40 subprogram_body: const_declarations var_declarations compound_statement .

    $default  reduce using rule 40 (subprogram_body)


state 143

   25 period: period COMMA DIGITS..DIGITS .

    $default  reduce using rule 25 (period)


state 144

   20 type: ARRAY LEFT_BRACKET period RIGHT_BRACKET OF . basic_type
   21 basic_type: . INTEGER
   22           | . REAL
   23           | . BOOLEAN
   24           | . CHAR

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46

    basic_type  go to state 153


state 145

   39 value_parameter: idlist COLON basic_type .

    $default  reduce using rule 39 (value_parameter)


state 146

   34 parameter_list: parameter_list SEMICOLON parameter .

    $default  reduce using rule 34 (parameter_list)


state 147

   61 expression_list: expression_list COLON expression .

    $default  reduce using rule 61 (expression_list)


state 148

   71 factor: ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .

    $default  reduce using rule 71 (factor)


state 149

   41 compound_statement: . BEGIN statement_list END
   44 statement: . variable ASSIGNOP expression
   45          | . procedure_call
   46          | . compound_statement
   47          | . IF expression THEN statement else_part
   48          | . FOR ID ASSIGNOP expression TO expression DO statement
   49          | . READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS
   50          | . WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   51          | .  [SEMICOLON, END, ELSE]
   54 variable: . ID id_varpart
   57 procedure_call: . ID
   58               | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   59 else_part: ELSE . statement

    ID     shift, and go to state 53
    BEGIN  shift, and go to state 35
    IF     shift, and go to state 54
    FOR    shift, and go to state 55
    READ   shift, and go to state 56
    WRITE  shift, and go to state 57

    $default  reduce using rule 51 (statement)

    compound_statement  go to state 58
    statement           go to state 154
    variable            go to state 61
    procedure_call      go to state 62


state 150

   47 statement: IF expression THEN statement else_part .

    $default  reduce using rule 47 (statement)


state 151

   48 statement: FOR ID ASSIGNOP expression TO . expression DO statement
   54 variable: . ID id_varpart
   63 expression: . simple_expression RELOP simple_expression
   64           | . simple_expression
   65 simple_expression: . simple_expression ADDOP term
   66                  | . term
   67 term: . term MULOP factor
   68     | . factor
   69 factor: . NUM
   70       | . variable
   71       | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   72       | . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   73       | . NOT factor
   74       | . UMINUS factor

    LEFT_PARENTHESIS  shift, and go to state 75
    ID                shift, and go to state 76
    NUM               shift, and go to state 77
    NOT               shift, and go to state 78
    UMINUS            shift, and go to state 79

    variable           go to state 80
    expression         go to state 155
    simple_expression  go to state 82
    term               go to state 83
    factor             go to state 84


state 152

   52 variable_list: variable_list COMMA variable .

    $default  reduce using rule 52 (variable_list)


state 153

   20 type: ARRAY LEFT_BRACKET period RIGHT_BRACKET OF basic_type .

    $default  reduce using rule 20 (type)


state 154

   59 else_part: ELSE statement .

    $default  reduce using rule 59 (else_part)


state 155

   48 statement: FOR ID ASSIGNOP expression TO expression . DO statement

    DO  shift, and go to state 156


state 156

   41 compound_statement: . BEGIN statement_list END
   44 statement: . variable ASSIGNOP expression
   45          | . procedure_call
   46          | . compound_statement
   47          | . IF expression THEN statement else_part
   48          | . FOR ID ASSIGNOP expression TO expression DO statement
   48          | FOR ID ASSIGNOP expression TO expression DO . statement
   49          | . READ LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS
   50          | . WRITE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
   51          | .  [SEMICOLON, END, ELSE]
   54 variable: . ID id_varpart
   57 procedure_call: . ID
   58               | . ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    ID     shift, and go to state 53
    BEGIN  shift, and go to state 35
    IF     shift, and go to state 54
    FOR    shift, and go to state 55
    READ   shift, and go to state 56
    WRITE  shift, and go to state 57

    $default  reduce using rule 51 (statement)

    compound_statement  go to state 58
    statement           go to state 157
    variable            go to state 61
    procedure_call      go to state 62


state 157

   48 statement: FOR ID ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 48 (statement)
